#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ Game\ is\ the\ class\ which\ represents\ the\ entire\ Nature\ Trail\ Game\ .\r\n\ It\ consists\ of\ a\ public\ method\ to\ start\ the\ Nature\ Trail\ Game\ and\ other\ private\ methods\ to\ help\ with\ the\ functionality\ internally\r\n\ @author\ Rohan\r\n\ @version\ 1.2\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Game\r\n\ The\ fields\ are\ initialized\ and\ set\ to\ their\ default\ values\r\n
comment10.params=player\ trailLength
comment10.target=void\ checkForNatureFeatures(Player,\ int)
comment10.text=\r\n\ Method\ checkForNatureFeatures\r\n\ checks\ if\ there\ are\ any\ nature\ features\ at\ the\ player's\ current\ position.\r\n\ If\ yes,\ would\ update\ the\ position\ and\ print\ it\ on\ the\ screen\r\n\ If\ not,\ would\ show\ the\ default\ message\ to\ indicate\ staying\ on\ the\ current\ position\r\n\ @param\ player\ the\ current\ player\r\n\ @param\ trailLength\ the\ length\ of\ the\ trail\r\n
comment11.params=player
comment11.target=void\ checkForAnimalSighting(Player)
comment11.text=\r\n\ Method\ checkForAnimalSighting\r\n\ Checks\ if\ an\ animal\ is\ spotted\ at\ the\ current\ position.\ \r\n\ If\ yes,\ would\ print\ the\ animal\ and\ points\ earned\ on\ the\ screen\ and\ would\ update\ the\ player's\ score.\r\n\ If\ not,\ would\ print\ no\ animals\ spotted\r\n\ @param\ player\ the\ current\ player\r\n
comment12.params=player
comment12.target=void\ displayPlayerDetails(Player)
comment12.text=\r\n\ Method\ displayPlayerDetails\r\n\ Prints\ the\ player's\ name,\ score\ and\ position\ on\ the\ screen\r\n\ @param\ player\ the\ current\ player\r\n
comment13.params=player\ newScore
comment13.target=void\ updateScore(Player,\ int)
comment13.text=\r\n\ Method\ updateScore\r\n\ Used\ to\ update\ the\ score\ of\ the\ player\ upon\ sighting\ an\ animal\r\n\ @param\ player\ represents\ the\ current\ player\r\n\ @param\ newScore\ the\ new\ score\ of\ the\ current\ player\r\n
comment14.params=
comment14.target=java.lang.String\ checkIfAnimalSighted()
comment14.text=\r\n\ Method\ checkIfAnimalSighted\r\n\ Checks\ if\ an\ animal\ is\ sighted\ with\ a\ 50%\ chance\r\n\ @return\ The\ spotted\ Animal's\ name\ and\ points\ separated\ by\ a\ comma,\ if\ any,\ or\ else\ would\ return\ empty\r\n
comment15.params=trailLength\ playerOnePosition\ playerTwoPosition
comment15.target=void\ showTrailProgress(int,\ int,\ int)
comment15.text=\r\n\ Method\ showTrailProgress\r\n\ This\ method\ would\ print\ out\ the\ trail\ along\ with\ start,\ finish\ and\ the\ user\ and\ computer's\ current\ positions.\r\n\ @param\ trailLength\ the\ length\ of\ the\ trail\ set\ by\ the\ user\r\n\ @param\ playerOnePosition\ the\ user's\ position\ on\ the\ trail\r\n\ @param\ playerTwoPosition\ the\ computer's\ position\ on\ the\ trail\r\n
comment16.params=
comment16.target=void\ displayBlankLine()
comment16.text=\r\n\ Method\ displayBlankLine\r\n\ Displays\ a\ blank\ line\ on\ the\ screen\r\n
comment17.params=player1\ player2\ trailLength
comment17.target=void\ compareScores(Player,\ Player,\ int)
comment17.text=\r\n\ Method\ compareScores\r\n\ This\ method\ is\ used\ to\ compare\ the\ scores\ of\ both\ the\ players\ once\ any\ of\ the\ player\ has\ finished\ crossing\ the\ trail.\r\n\ It\ would\ add\ a\ score\ of\ 10\ points\ for\ finishing\ first\ and\ would\ compare\ the\ scores\ of\ both\ the\ players\ and\ display\ the\ result.\r\n\ @param\ player1\ Corresponds\ to\ the\ user\r\n\ @param\ player2\ Corresponds\ to\ the\ computer\r\n\ @param\ trailLength\ the\ length\ of\ the\ trail\ set\ by\ the\ user\r\n
comment18.params=
comment18.target=void\ displayLine()
comment18.text=\r\n\ Method\ displayLine\r\n\ Display\ a\ line\ with\ Hash\ characters\ on\ the\ screen\r\n
comment19.params=
comment19.target=void\ displayGameHeader()
comment19.text=\r\n\ Method\ displayGameHeader\r\n\ Displays\ the\ Game\ Header\ on\ the\ screen\r\n
comment2.params=newTrailLength\ newNatureTrail\ newPlayer1\ newPlayer2
comment2.target=Game(int,\ Trail,\ Player,\ Player)
comment2.text=\r\n\ Game\ Constructor\r\n\r\n\ @param\ newTrailLength\ A\ new\ length\ for\ the\ trail\r\n\ @param\ newNatureTrail\ A\ new\ trail\ object\r\n\ @param\ newPlayer1\ A\ new\ player\ object\r\n\ @param\ newPlayer2\ A\ new\ player\ object\r\n
comment3.params=
comment3.target=void\ startGame()
comment3.text=\r\n\ Method\ startGame\r\n\ This\ method\ is\ used\ to\ start\ the\ Nature\ Trail\ Game.\r\n\ It\ prompts\ the\ user\ for\ inputs\ and\ validates\ them.\r\n\ It\ does\ the\ first\ dice\ roll\ and\ comparison\ to\ determine\ who\ goes\ first.\r\n\ Next,\ the\ nature\ features\ are\ randomly\ setup\ across\ the\ trial.\r\n\ Now\ the\ players\ take\ turn\ to\ roll\ the\ dice\ until\ a\ player\ reaches\ the\ final\ position.\r\n\ Lastly\ the\ scores\ are\ compared\ to\ determine\ the\ winner\ and\ this\ is\ printed\ on\ the\ screen\r\n
comment4.params=name
comment4.target=Player\ initializePlayer(java.lang.String)
comment4.text=\r\n\ Method\ initializePlayer\r\n\ This\ method\ is\ used\ to\ initialize\ a\ new\ player\ object\ with\ the\ given\ name\ and\ return\ it\r\n\ @param\ name\ name\ for\ the\ player\r\n\ @return\ A\ player\ object\ with\ default\ values\ and\ name\ set\r\n
comment5.params=dice\ currentPlayer\ nextPlayer
comment5.target=void\ playTurn(Dice,\ Player,\ Player)
comment5.text=\r\n\ Method\ playTurn\r\n\ This\ method\ is\ used\ to\ play\ each\ Player's\ turn.\ It\ would\ roll\ the\ dice\ and\ update\ the\ position\ of\ the\ user.\r\n\ It\ would\ then\ check\ for\ animal\ sightings\ and\ nature\ features,\ if\ the\ player\ is\ not\ at\ the\ start\ or\ end\ of\ the\ trail.\r\n\ It\ would\ also\ print\ the\ player's\ details\ and\ show\ both\ the\ player's\ trail\ progress.\r\n\ Lastly,\ the\ turns\ for\ each\ user\ are\ updated\r\n\ @param\ dice\ the\ dice\ object\r\n\ @param\ currentPlayer\ the\ current\ player\r\n\ @param\ nextPlayer\ the\ next\ player\ who's\ waiting\ for\ the\ turn\ to\ roll\ the\ dice\r\n
comment6.params=dice\ player
comment6.target=int\ rollDice(Dice,\ Player)
comment6.text=\r\n\ Method\ rollDice\r\n\ This\ method\ would\ prompt\ the\ user\ to\ roll\ the\ dice.\ It\ would\ then\ print\ the\ rolled\ number\ on\ the\ screen\ and\ return\ the\ value\r\n\ @param\ dice\ the\ dice\ object\r\n\ @param\ player\ the\ current\ player\r\n\ @return\ the\ value\ after\ rolling\ the\ dice\r\n
comment7.params=playerName
comment7.target=void\ showRollingGraphic(java.lang.String)
comment7.text=\r\n\ Method\ showRollingGraphic\r\n\ Displays\ the\ dice\ rolling\ graphic\ with\ the\ player's\ name\ on\ the\ screen\r\n\ @param\ playerName\ the\ current\ player's\ name\r\n
comment8.params=playerOneDiceValue\ playerTwoDiceValue\ dice
comment8.target=void\ compareDiceValues(int,\ int,\ Dice)
comment8.text=\r\n\ Method\ compareDiceValues\r\n\ This\ method\ compares\ the\ values\ of\ each\ player's\ dice\ and\ prints\ an\ appropriate\ message\ on\ the\ screen\r\n\ If\ the\ two\ values\ are\ equal,\ the\ die\ are\ rolled\ again\r\n\ @param\ playerOneDiceValue\ dice\ value\ rolled\ by\ the\ user\r\n\ @param\ playerTwoDiceValue\ dice\ value\ rolled\ by\ the\ computer\r\n\ @param\ dice\ the\ dice\ object\r\n
comment9.params=player\ currentFeature\ trailLength
comment9.target=void\ updatePosition(Player,\ NatureFeature,\ int)
comment9.text=\r\n\ Method\ updatePosition\r\n\ This\ method\ prints\ the\ nature\ feature\ spotted\ at\ the\ current\ position.\ Also,\ updates\ the\ player's\ position\ according\ to\ the\ feature's\ space\ penalty\r\n\ If\ the\ new\ Position\ is\ less\ than\ the\ trail\ start\ point,\ it\ would\ update\ the\ new\ position\ to\ the\ starting\ point.\r\n\ If\ the\ new\ Position\ is\ greater\ than\ the\ trail\ length,\ it\ would\ update\ the\ new\ position\ to\ the\ finishing\ point.\r\n\ @param\ player\ the\ current\ player\r\n\ @param\ currentFeature\ the\ feature\ spotted\ at\ this\ position\r\n\ @param\ trailLength\ the\ length\ of\ the\ trail\r\n
numComments=20
